server:
  port: 7006

spring:
  application:
    name: eureka-server

eureka:
  instance:
    hostname: eureka7006.com #eureka服务端的实例名称
#    instance-id: ${spring.application.name}:${server.port}
#    prefer-ip-address: true    #访问路径可以显示当前ip
#    ip-address: 127.0.0.1
  client:
    register-with-eureka: true #false表示不向注册中心注册自己。 本身就是服务.无需向自己注册
    fetch-registry: true #false表示自己端就是注册中心，我的职责就是维护服务实例，并不需要去检索服务
    service-url:
      # 集群 其他几台eureka服务的地址 格式: http://ip[或者hostname]:port/eureka/
      #      #配置多个地址 ,除了自己以外的地址
      #      #设置与Eureka Server交互的地址查询服务和注册服务都需要依赖这个地址。
      defaultZone: http://eureka7004.com:7004/eureka/,http://eureka7005.com:7005/eureka/
#      defaultZone: http://127.0.0.1:7005/eureka/,http://127.0.0.1:7004/eureka/
      # 单机
      #      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
      server:
        enable-self-preservation: false  #关闭自我保护机制.确保可以把不可用的实例自我剔除
#  devtools:
#    restart:
#      enabled: true # 开启
#      additional-paths: src/main/java # 重启的目录

